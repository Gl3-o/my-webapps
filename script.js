// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const state = {
  categories: [],
  items: [],
  currentCategory: null,
  selectedItem: null
};

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const elements = {
  categoriesScreen: document.getElementById('categories-screen'),
  itemsScreen: document.getElementById('items-screen'),
  checkoutScreen: document.getElementById('checkout-screen'),
  categoriesList: document.getElementById('categories-list'),
  itemsList: document.getElementById('items-list'),
  categoryTitle: document.getElementById('category-title'),
  itemInfo: document.getElementById('item-info'),
  checkoutForm: document.getElementById('checkout-form'),
  errorElement: document.getElementById('error'),
  backToCategoriesBtn: document.getElementById('back-to-categories'),
  backToItemsBtn: document.getElementById('back-to-items'),
  userNameInput: document.getElementById('user_name'),
  userEmailInput: document.getElementById('user_email'),
  userPhoneInput: document.getElementById('user_number')
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
async function initApp() {
  setupEventListeners();
  await loadCategories();
  showScreen('categories');
  
  // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
  if (tg.initDataUnsafe?.user) {
    const user = tg.initDataUnsafe.user;
    const userName = `${user.first_name || ''} ${user.last_name || ''}`.trim();
    if (userName) elements.userNameInput.value = userName;
  }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
  elements.backToCategoriesBtn.addEventListener('click', () => showScreen('categories'));
  elements.backToItemsBtn.addEventListener('click', () => showScreen('items'));
  elements.checkoutForm.addEventListener('submit', handleOrderSubmit);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
async function loadCategories() {
  try {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –≤–∞—à–µ–º—É API
    // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫ –¥–∞–Ω–Ω—ã–µ
    state.categories = [
      { id: 1, name: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞' },
      { id: 2, name: '–û–¥–µ–∂–¥–∞' },
      { id: 3, name: '–ö–Ω–∏–≥–∏' }
    ];
    renderCategories();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
    showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
  }
}

async function loadItems(categoryId) {
  try {
    // 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    elements.itemsList.innerHTML = `
      <div class="loading">
        <div class="spinner"></div>
        <p>–ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã...</p>
      </div>
    `;

    // 2. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ WebApp
    const tgToken = tg.initData || '';
    
    // 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –≤–∞—à–µ–º—É API
    const response = await fetch(`https://your-api-domain.com/items?category_id=${categoryId}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${tgToken}`
      },
      cache: 'no-cache'
    });

    // 4. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`);
    }

    const data = await response.json();

    // 5. –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!data || !Array.isArray(data.items)) {
      throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö');
    }

    // 6. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    state.items = data.items.map(item => ({
      id: item.id,
      name: item.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
      price: item.price || 0,
      description: item.description || '',
      image: item.image_url || 'default-image.jpg'
    }));

    // 7. –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    state.currentCategory = state.categories.find(c => c.id == categoryId);
    
    // 8. –†–µ–Ω–¥–µ—Ä–∏–º —Ç–æ–≤–∞—Ä—ã
    renderItems();

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
    
    // 9. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    elements.itemsList.innerHTML = `
      <div class="error-block">
        <p>üòï –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã</p>
        <button class="retry-btn" onclick="loadItems(${categoryId})">
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
        <p class="error-details">${error.message}</p>
      </div>
    `;
  }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function renderCategories() {
  elements.categoriesList.innerHTML = '';
  
  state.categories.forEach(category => {
    const categoryElement = document.createElement('div');
    categoryElement.className = 'category-card';
    categoryElement.innerHTML = `
      <h3>${category.name}</h3>
      <p>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã</p>
    `;
    
    categoryElement.addEventListener('click', () => {
      loadItems(category.id);
      showScreen('items');
    });
    
    elements.categoriesList.appendChild(categoryElement);
  });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
function renderItems() {
  elements.categoryTitle.textContent = state.currentCategory.name;
  elements.itemsList.innerHTML = '';
  
  state.items.forEach(item => {
    const itemElement = document.createElement('div');
    itemElement.className = 'item-card';
    itemElement.innerHTML = `
      <h3>${item.name}</h3>
      <p class="item-description">${item.description}</p>
      <p class="item-price">${item.price.toLocaleString()} ‚ÇΩ</p>
    `;
    
    itemElement.addEventListener('click', () => {
      state.selectedItem = item;
      renderItemInfo();
      showScreen('checkout');
    });
    
    elements.itemsList.appendChild(itemElement);
  });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ
function renderItemInfo() {
  elements.itemInfo.innerHTML = `
    <h2>${state.selectedItem.name}</h2>
    <p>${state.selectedItem.description}</p>
    <p class="item-price">–¶–µ–Ω–∞: ${state.selectedItem.price.toLocaleString()} ‚ÇΩ</p>
  `;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
async function handleOrderSubmit(e) {
  e.preventDefault();
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
  const formData = {
    name: elements.userNameInput.value.trim(),
    email: elements.userEmailInput.value.trim(),
    phone: elements.userPhoneInput.value.trim(),
    itemId: state.selectedItem.id,
    itemName: state.selectedItem.name,
    itemPrice: state.selectedItem.price
  };
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è
  if (!validateForm(formData)) return;
  
  // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram –±–æ—Ç
  try {
    tg.sendData(JSON.stringify(formData));
    // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
    tg.showAlert('–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É!', () => tg.close());
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞');
  }
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
function validateForm(formData) {
  if (formData.name.length < 2) {
    showError('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è');
    return false;
  }
  
  if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.email)) {
    showError('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email');
    return false;
  }
  
  if (!/^[\d\+][\d\s\-\(\)]{7,}$/.test(formData.phone)) {
    showError('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω');
    return false;
  }
  
  return true;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
function showError(message) {
  elements.errorElement.textContent = message;
  setTimeout(() => {
    elements.errorElement.textContent = '';
  }, 3000);
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏
function showScreen(screenName) {
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
  Object.keys(elements).forEach(key => {
    if (key.endsWith('Screen')) {
      elements[key].style.display = 'none';
    }
  });
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
  switch (screenName) {
    case 'categories':
      elements.categoriesScreen.style.display = 'block';
      break;
    case 'items':
      elements.itemsScreen.style.display = 'block';
      break;
    case 'checkout':
      elements.checkoutScreen.style.display = 'block';
      break;
  }
  
  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≤–µ—Ä—Ö –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —ç–∫—Ä–∞–Ω–æ–≤
  window.scrollTo(0, 0);
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', initApp);